name: Validate CloudFormation on PR

# Minimal change for testing PR - updated comment.
# Additional minimal change: Added echo statements to steps.

on: 
  pull_request:
    paths:
      - 'cloudformation/**'

permissions:
  pull-requests: write
  contents: read
  
jobs:
  Validate-cfn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-west-2

      - name: Validate CloudFormation template
        run: |
          echo "Starting CloudFormation template validation"
          aws cloudformation validate-template --template-body file://cloudformation/s3-bucket.yaml

      - name: Deploy our stack
        run: |
          stack_name="pr-test-stack-${{github.event.pull_request.number}}"
          echo "Deploying stack: $stack_name"
          aws cloudformation create-stack --stack-name $stack_name --template-body file://cloudformation/s3-bucket.yaml --parameters ParameterKey=Environment,ParameterValue=test

      - name: Check Deployed Resources
        run: |
          stack_name="pr-test-stack-${{github.event.pull_request.number}}"
          echo "Checking resources for stack: $stack_name"
          aws cloudformation describe-stack-resources --stack-name $stack_name
          echo "Listing S3 buckets to verify deployment"
          aws s3 ls

      - name: Comment on the PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `CloudFormation test stack deployed. Stack name: pr-test-stack-${{github.event.pull_request.number}}. Check the logs for deployed resources.`
            })

  cleanup-on-merge: 
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps: 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-west-2

      - name: Delete Test Stack
        run: |
          stack_name="pr-test-stack-${{github.event.pull_request.number}}"
          aws cloudformation delete-stack --stack-name $stack_name
